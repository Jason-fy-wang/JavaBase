FENCING_SCRIPT_SUBJ=Executed fencing script
FENCING_SCRIPT_BODY=Executed fencing script {0}\n\n\
Results: {1}

FENCING_SCRIPT_ERROR_SUBJ=Fencing script error
FENCING_SCRIPT_ERROR_BODY=Fencing script {0} failed to execute successfully\n\
Exit Value: {1}\n\n\
Results: {2}\n\n\
Failover has NOT occurred.

POST_PROMOTION_SCRIPT_SUBJ=Executed post-promotion script
POST_PROMOTION_SCRIPT_BODY=Executed post-promotion script {0}\n\
Results: {1}

POST_PROMOTION_SCRIPT_FAIL_SUBJ=Post-promotion script failed
POST_PROMOTION_SCRIPT_FAIL_BODY=Post-promotion script {0} failed to execute successfully\n\
Exit Value: {1}\n\
Results: {2}

POST_DB_FAIL_SCRIPT_SUBJ=Executed post-database failure script
POST_DB_FAIL_SCRIPT_BODY=Executed post-database failure script {0}\n\
Results: {1}

POST_DB_FAIL_SCRIPT_FAIL_SUBJ=Post-database failure script error
POST_DB_FAIL_SCRIPT_FAIL_BODY=Post-database failure script {0} failed to execute successfully\n\
Exit Value: {1}\n\
Results: {2}

AUTO_RESUME_STARTED_SUBJ=Starting auto resume check for cluster {0}
AUTO_RESUME_STARTED_BODY=\
The agent on this node will check every {0} seconds to see\n\
if it can resume monitoring the failed database. The cluster\n\
should be checked during this time and the agent stopped\n\
if the database will not be started again. See the agent\n\
log for more details.

RESUMED_SCRIPT_RUN_SUBJ=Executed agent resumed script
RESUMED_SCRIPT_RUN_BODY=Executed agent resumed script {0}\n\
Results: {1}

RESUMED_SCRIPT_FAILURE_SUBJ=Agent resumed script error
RESUMED_SCRIPT_FAILURE_BODY=Agent resumed script {0} failed to execute successfully\n\
Exit Value: {1}\n\
Results: {2}

MASTER_ISO_SCRIPT_SUBJ=Executed master isolation script
MASTER_ISO_SCRIPT_BODY=Executed master isolation script {0}\n\
Results: {1}

MASTER_ISO_SCRIPT_FAIL_SUBJ=Master isolation script failed
MASTER_ISO_SCRIPT_FAIL_BODY=Master isolation script {0} failed to execute successfully\n\
Exit Value: {1}\n\
Results: {2}

WITNESS_STARTED_SUBJ=Witness agent running on {0} for cluster {1}
WITNESS_STARTED_BODY=Witness agent is running.

MASTER_STARTED_SUBJ=Master agent running on {0} for cluster {1}
MASTER_STARTED_BODY=Master agent is running and database health is being monitored.

STANDBY_STARTED_SUBJ=Standby agent running on {0} for cluster {1}
STANDBY_STARTED_BODY=Standby agent is running and database health is being monitored.

IDLE_STARTED_SUBJ=Idle agent running on {0} for cluster {1}
IDLE_STARTED_BODY=Idle agent is running. After starting the local database, the agent can be resumed.

DATABASE_FAILURE_SUBJ={0} database failure for cluster {1}
DATABASE_FAILURE_BODY=The agent has detected that the database has failed on {0}.

ASSIGN_VIP_SUBJ=Assigning VIP to node {0}
ASSIGN_VIP_BODY=Assigning VIP {0} to node {1}\n\n\
Results: {2}

ASSIGN_VIP_FAILED_SUBJ=Could not assign VIP to node {0}
ASSIGN_VIP_FAILED_BODY=Failure assigning VIP {0} to node {1}\n\n\
Results: {2}

RELEASE_VIP_SUBJ=Releasing VIP from node {0}
RELEASE_VIP_BODY=Releasing VIP {0} from node {1}\n\n\
Results: {2}

VIP_ASSIGNED_TO_NON_MASTER_SUBJ=Virtual IP address assigned to non-master node
VIP_ASSIGNED_TO_NON_MASTER_BODY=The virtual IP address appears to be assigned to a non-master node.\n\
To avoid any conflicts, EDB Postgres Failover Manager will release the VIP.\n\
You should confirm that the VIP is assigned to your master node and manually\n\
reassign the address if it is not.

VIP_NOT_ASSIGNED_TO_MASTER_SUBJ=Virtual IP address not assigned to master node
VIP_NOT_ASSIGNED_TO_MASTER_BODY=The virtual IP address appears to not be assigned to a master node.\n\
EDB Postgres Failover Manager will attempt to reacquire the VIP.

NO_STANDBY_SUBJ=No standby agent in cluster for cluster {0}
NO_STANDBY_BODY=The standby on {0} has left the cluster.

NO_STANDBY_BUT_DB_UP_SUBJ=Standby agent failed for cluster {0}
NO_STANDBY_BUT_DB_UP_BODY=The standby agent on {0} has left the cluster,\n\
  but the coordinator has detected that the standby database is still running.

STANDBY_DB_FAIL_BUT_DB_UP_SUBJ=Standby agent cannot reach database for cluster {0}
STANDBY_DB_FAIL_BUT_DB_UP_BODY=The standby agent has signaled database failure, but the\n\
other nodes have detected that the standby database is still running.

STANDBY_DB_FAIL_SUBJ=Standby database failed for cluster {0}
STANDBY_DB_FAIL_BODY=The standby agent has signaled that its database has failed.\n\
The other cluster nodes also cannot reach the standby database.

NO_WITNESS_SUBJ=Witness failure for cluster {0}
NO_WITNESS_BODY=Witness running at {0} has left the cluster.

NO_IDLE_SUBJ=Idle agent failure for cluster {0}
NO_IDLE_BODY=Idle agent running at {0} has left the cluster.

NODE_ISOLATED_SUBJ=One or more nodes isolated from network for cluster {0}
NODE_ISOLATED_BODY=This node appears to be isolated from the network. Other members\n\
  seen in the cluster are: {0}.

NODE_NOT_ISOLATED_SUBJ=Node no longer isolated from network for cluster {0}
NODE_NOT_ISOLATED_BODY=This node is no longer isolated from the network. Please\n\
check the cluster status on all nodes to verify the cluster is in\n\
a proper state.

DB_UP_BUT_ERROR_SUBJ=Unable to connect to DB on {0}
DB_UP_BUT_ERROR_BODY_53300=The maximum connections limit has been reached.
DB_UP_BUT_ERROR_BODY_28P01=Invalid password for db.user={0}.
DB_UP_BUT_ERROR_BODY_28000=Invalid authorization specification.

PROMOTE_BUT_MASTER_UP_SUBJ=Standby agent tried to promote, but master DB is still running
PROMOTE_BUT_MASTER_UP_BODY=The standby EFM agent tried to promote itself, but detected that\n\
the master DB is still running on {0}.\n\n\
This usually indicates that the master EFM agent has exited.\n\n\
Failover has NOT occurred.

PROMOTE_BUT_MASTER_UNKNOWN_SUBJ=Standby agent tried to promote, but could not verify master DB
PROMOTE_BUT_MASTER_UNKNOWN_BODY=The standby EFM agent tried to promote itself, but could not\n\
detect whether or not the master DB is still running on {0}.\n\n\
Failover has NOT occurred.

PROMOTE_BUT_VIP_ASSIGNED_SUBJ=Standby agent tried to promote, but VIP appears to still be assigned
PROMOTE_BUT_VIP_ASSIGNED_BODY=The standby EFM agent tried to promote itself, but could not\n\
because the virtual IP address ({0}) appears to still be assigned\n\
to another node.  Promoting under these circumstances could cause data\n\
corruption.\n\n\
Failover has NOT occurred.

PROMOTE_BUT_ORPHANED_SUBJ=Standby agent tried to promote, but appears to be orphaned
PROMOTE_BUT_ORPHANED_BODY=The standby EFM agent tried to promote itself, but could not\n\
because the well known server ({0}) could not be reached.  This\n\
usually indicates a network issue that has separated the standby agent from\n\
the other agents.  The standby agent is unable to determine if the master\n\
agent and database are running.\n\
Failover has NOT occurred.

PROMOTE_BUT_MASTER_REJOIN_SUBJ=Standby agent started to promote, but master has rejoined
PROMOTE_BUT_MASTER_REJOIN_BODY=The standby EFM agent started to promote itself, but found that\n\
a master agent has rejoined the cluster.\n\
Failover has NOT occurred.

PROMOTE_BUT_NO_STANDBY_SUBJ=Failover has not occurred
PROMOTE_BUT_NO_STANDBY_BODY=An agent has detected that the master database \
is no longer available in\n\
cluster {0}, but there are no standby nodes available for failover.

PROMOTE_BUT_NOT_ENOUGH_STANDBYS_SUBJ=Failover has not occurred
PROMOTE_BUT_NOT_ENOUGH_STANDBYS_BODY=An agent has detected that the master database \
is no longer available in\n\
cluster {0}, but there are not enough standby nodes available for failover.

PROMOTE_BUT_ALREADY_PROMOTING_SUBJ=Promotion has not occurred for cluster {0}
PROMOTE_BUT_ALREADY_PROMOTING_BODY=A promotion was attempted but there is already a\n\
node being promoted: {0}.

FAILOVER_DISABLED_SUBJ=Potential manual failover required on cluster {0}
FAILOVER_DISABLED_BODY=A potential failover situation was detected for cluster {0}. Automatic\n\
failover has been disabled for this cluster, so manual\n\
intervention is required.

PROMOTION_STARTED_SUBJ=Promotion has started on cluster {0}
PROMOTION_STARTED_BODY=Promotion of standby has started on cluster {0}.

RESUME_FAILED_PROMOTED_NODE_SUBJ=Could not resume replay for cluster {0}
RESUME_FAILED_PROMOTED_NODE_BODY=Could not resume replay for standby being promoted. Manual intervention\n\
may be required. Error: {0}

RESUME_FAILED_SUBJ=Could not resume replay for standby {0}
RESUME_FAILED_BODY=Could not resume replay for standby. Manual intervention may be required.\n\
Error: {0}

FAILOVER_COMPLETE_SUBJ=Failover has completed on cluster {0}
FAILOVER_COMPLETE_BODY=Failover has completed on cluster {0}.

TRIGGER_FAILED_SUBJ=Could not promote standby
TRIGGER_FAILED_BODY=The trigger file could not be created\n\
on node.  Could not promote standby.\n\n\
Error details: \n\
{0}

MASTER_CANNOT_PING_RUNNING_DB_SUBJ=Master cannot ping local database for cluster {0}
MASTER_CANNOT_PING_RUNNING_DB_BODY=The master agent can no longer reach the local database running at\n\
{0}. Other nodes are able to access the database remotely,\n\
so the master will not release the VIP and/or create a recovery.conf file.\n\
The master agent will become IDLE until the resume command is run to\n\
resume monitoring the database.

LOCK_FILE_REMOVED_SUBJ=Lock file for cluster {0} has been removed
LOCK_FILE_REMOVED_BODY=The lock file for cluster {0} has been removed from: {1}\n\
on node {2}.  This lock prevents multiple agents from monitoring the same\n\
cluster on the same node.  Please restore this file to prevent accidentally\n\
starting another agent for cluster.

RECOVERY_CONF_FILE_EXISTS_SUBJ=A recovery.conf file for cluster {0} has been found
RECOVERY_CONF_FILE_EXISTS_BODY=A recovery.conf file for cluster {0} has been found at: {1}\n\
on master node {2}.  This may be problematic should you attempt to restart the DB on this node.

RECOVERY_CONF_ERROR_SUBJ=Error creating recovery.conf file on {0} for cluster {1}
RECOVERY_CONF_ERROR_BODY=There was an error creating the recovery.conf file on master\n\
node {0} during promotion.  Promotion has continued, but requires manual\n\
intervention to ensure that the old master node can not be restarted.\n\n\
Error details: \n\
{1}

DATABASE_SHOULD_BE_IN_RECOVERY_SUBJ=Database in wrong state on {0}
DATABASE_SHOULD_BE_IN_RECOVERY_BODY=The standby agent has detected that the local database is\n\
no longer in recovery. The agent will now become IDLE. Manual\n\
intervention is required.

DATABASE_SHOULD_NOT_BE_IN_RECOVERY_SUBJ=Database in wrong state on {0}
DATABASE_SHOULD_NOT_BE_IN_RECOVERY_BODY=The master agent has detected that the local database is\n\
in recovery. The agent will now become IDLE. Manual\n\
intervention is required.

MONITOR_TIMING_OUT_SUBJ=Agent is timing out for cluster {0}
MONITOR_TIMING_OUT_BODY=This agent has timed out trying to reach the local database. After\n\
the timeout, the agent could successfully ping the database and has\n\
resumed monitoring. However, the node should be checked to make sure\n\
it is performing normally to prevent a possible database or agent failure.

RESTART_RESUME_TIMED_OUT_SUBJ=Resume timed out for cluster {0}
RESTART_RESUME_TIMED_OUT_BODY=This agent could not resume monitoring after reconfiguring and\n\
restarting the local database. See agent log for details.

RECONFIGURE_OFF_SUBJ=Standby not reconfigured after failover in cluster {0}
RECONFIGURE_OFF_BODY=The 'auto.reconfigure' property has been set to false for this node,\n\
so it has not been reconfigured to follow the new master node after\n\
a failover.

PING_NEW_DB_FAIL_SUBJ=Database connection failure for cluster {0}
PING_NEW_DB_FAIL_BODY=This node is unable to connect to the database running on:\n\
{0}\n\
Until this is fixed, failover may not work properly because this node\n\
will not be able to check if the database is running or not.

TRIAL_LICENSE_EXPIRING_SUBJ=Trial license expiring soon
TRIAL_LICENSE_EXPIRING_BODY=Your trial license for EDB Postgres Failover Manager will expire on {0}.\n\
A valid product key is required for continued operation once the initial trial period\n\
has ended. Without a valid product key, at the end of the trial, Failover Manager\n\
will exit and no longer run. Please contact your EnterpriseDB account manager to\n\
purchase a license for Failover Manager.

FULL_LICENSE_EXPIRING_SUBJ=Full license expiring soon
FULL_LICENSE_EXPIRING_BODY=Your Full Use license for EDB Postgres Failover Manager will expire\n\
on {0}. A valid product key is required for continued operation once your\n\
current license subscription ends.  Without a valid product key, at the end of your\n\
subscription, Failover Manager will exit and no longer run. Please contact your\n\
EnterpriseDB account manager to renew your subscription for Failover Manager.

LICENSE_EXPIRED_SHUTDOWN_SUBJ=License has expired
LICENSE_EXPIRED_SHUTDOWN_BODY=EDB Postgres Failover Manager has shutdown. Your license subscription to run this\n\
product expired on {0}.  Please contact your EnterpriseDB account manager\n\
to purchase a new license subscription for Failover Manager.

LICENSE_EXPIRED_NO_SHUTDOWN_SUBJ=License has expired
LICENSE_EXPIRED_NO_SHUTDOWN_BODY=Your license subscription to run this product expired on {0}.\n\
EDB Postgres Failover Manager is continuing to run under the trial period.  Please contact your\n\
EnterpriseDB account manager to purchase a new license subscription for Failover Manager.

LICENSE_INVALID_SHUTDOWN_SUBJ=License is invalid
LICENSE_INVALID_SHUTDOWN_BODY=EDB Postgres Failover Manager has shutdown. There is a problem with the Full\n\
Use License for Failover Manager that was provided in the cluster properties file.\n\
Please check to be sure it was entered correctly. If this problem persists, please contact\n\
your EnterpriseDB account manager.

LICENSE_INVALID_NO_SHUTDOWN_SUBJ=License is invalid
LICENSE_INVALID_NO_SHUTDOWN_BODY=There is a problem with the Full Use License for EDB Postgres Failover Manager\n\
that was provided in the cluster properties file. Please check to be sure it was entered\n\
correctly. Failover Manager will continue to run for the duration of the trial period.\n\
If this problem persists, please contact your EnterpriseDB account manager.

REMOTE_TIMEOUT_TOO_HIGH_SUBJ=Possible problem with database timeout values
REMOTE_TIMEOUT_TOO_HIGH_BODY=Your {0} value ({1}) is higher than your {2} value ({3}). If the local\n\
database takes too long to respond, the local agent could assume that the database\n\
has failed though other agents can connect. While this will not cause a failover, it\n\
could force the local agent to stop monitoring, leaving you without failover protection. 

#
# Agent exit notifications must follow same formatting rules for subj & body because
# they are dynamically filled in at exit time in Notifications shutdown hook:
#     ip & cluster name in subject, no params in body
#
WITNESS_EXITED_SUBJ=Witness agent exited on {0} for cluster {1}
WITNESS_EXITED_BODY=Witness agent has exited.

MASTER_EXITED_SUBJ=Master agent exited on {0} for cluster {1}
MASTER_EXITED_BODY=Database health is not being monitored.

COORD_SEES_MASTER_EXITED_SUBJ=Cluster {0} notified that master node has left
COORD_SEES_MASTER_EXITED_BODY=Failover is disabled for the cluster until the master \
agent is restarted.

STANDBY_EXITED_SUBJ=Standby agent exited on {0} for cluster {1}
STANDBY_EXITED_BODY=Database health is not being monitored.

PROMOTING_EXITED_SUBJ=Agent exited during promotion on {0} for cluster {1}
PROMOTING_EXITED_BODY=Database health is not being monitored.

IDLE_EXITED_SUBJ=Agent exited on {0} for cluster {1}
IDLE_EXITED_BODY=The agent has exited.

# special case that only has 1 arg in the subject
AGENT_EXITED_SUBJ=Agent exited for cluster {0}
AGENT_EXITED_BODY=The agent has exited.

FEWER_THAN_THREE_SUBJ=Cluster {0} has dropped below three nodes
FEWER_THAN_THREE_BODY=At least three nodes are required for full failover \
protection. Please add witness or agent node to the cluster.

CLUSTER_SUBSET_NO_MASTER_SUBJ=Subset of cluster {0} disconnected from master
CLUSTER_SUBSET_NO_MASTER_BODY=This node is no longer connected to the majority of the cluster\n\
{0}. Because this node is part of a subset of the cluster, failover\n\
will not be attempted. Current nodes that are visible are:\n{1}

MASTER_ISOLATED_FROM_MAJORITY_SUBJ=Master database being fenced off for cluster {0}
MASTER_ISOLATED_FROM_MAJORITY_BODY=The master database has been isolated from the majority\n\
of the cluster. The cluster is telling the master agent\n\
at {0} to fence off the master database to\n\
prevent two masters when the rest of the failover manager\n\
cluster promotes a standby.

MASTER_ISOLATED_FROM_MAJORITY_REJOIN_SUBJ=Master database being fenced off for cluster {0}
MASTER_ISOLATED_FROM_MAJORITY_REJOIN_BODY=The master database has been isolated from the majority\n\
of the cluster. Before the master could finish detecting\n\
isolation, a standby was promoted and has rejoined this\n\
node in the cluster. This node is isolating itself to avoid\n\
more than one master database.

NODE_IP_ERROR_SUBJ=Communication error for cluster {0}
NODE_IP_ERROR_BODY=This node has connected to the cluster, but cannot resolve the IP\n\
address for one or more cluster members. Please stop the agent\n\
running on {0} if it did not stop already and verify that all the\n\
existing cluster members' addresses are in the .nodes file.

UNEXPECTED_PROBLEM_SUBJECT=An unexpected error has occurred for cluster {0}
UNEXPECTED_PROBLEM_BODY=An unexpected error has occurred on this node. Please\n\
check the agent log for more information. Error:\n\
{0}

CLUSTER_STATE_MISMATCH_SUBJ=Internal state mismatch for cluster {0}
CLUSTER_STATE_MISMATCH_BODY=The failover manager cluster's internal state did not match the\n\
actual state of the cluster members. This is rare and can be caused\n\
by a timing issue of nodes joining the cluster and/or changing their\n\
state. The problem should be resolved, but you should check the cluster\n\
status as well to verify. Details of the mismatch can be found in the\n\
agent log file.
