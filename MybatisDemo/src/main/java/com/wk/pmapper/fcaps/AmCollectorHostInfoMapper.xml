<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wk.pmapper.fcaps.AmCollectorHostInfoMapper" >
  <resultMap id="BaseResultMap" type="com.wk.entity.fcaps.AmCollectorHostInfo" >
    <id column="collector_id" property="collectorId" jdbcType="INTEGER" />
    <result column="collector_name" property="collectorName" jdbcType="VARCHAR" />
    <result column="collector_inner_ip" property="collectorInnerIp" jdbcType="VARCHAR" />
    <result column="collector_external_ip" property="collectorExternalIp" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="heartbeat_time" property="heartBeatTime" jdbcType="TIMESTAMP" />
    <result column="lost_heartbeat_num" property="lostHeartbeatNum" jdbcType="INTEGER" />
    <result column="process_capacity" property="processCapacity" jdbcType="INTEGER" />
    <result column="node_state" property="nodeState" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    collector_id, collector_name, collector_inner_ip, collector_external_ip, state, heartbeat_time, 
    lost_heartbeat_num, process_capacity,node_state
  </sql>
  <select id="hostInnerIpGet" parameterType="java.lang.Integer" resultType="java.lang.String">
    SELECT collector_inner_ip FROM am_collector_host_info WHERE collector_id = #{collectorId}
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wk.entity.fcaps.AmCollectorHostInfoExample" useCache="false">
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from am_collector_host_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" useCache="false">
    select 
    <include refid="Base_Column_List" />
    from am_collector_host_info
    where collector_id = #{collectorId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from am_collector_host_info
    where collector_id = #{collectorId}
  </delete>
  <delete id="deleteByExample" parameterType="com.wk.entity.fcaps.AmCollectorHostInfoExample" >
    delete from am_collector_host_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wk.entity.fcaps.AmCollectorHostInfo">
    <selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="collectorId">
      select nextval('am_collector_host_info_collector_id_seq'::regclass) as collectorId
    </selectKey>
    insert into am_collector_host_info (collector_id, collector_name, collector_inner_ip, 
      collector_external_ip, state, heartbeat_time, 
      lost_heartbeat_num, process_capacity,node_state)
    values (#{collectorId}, #{collectorName,jdbcType=VARCHAR}, #{collectorInnerIp,jdbcType=VARCHAR},
      #{collectorExternalIp,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{heartBeatTime,jdbcType=TIMESTAMP}, 
      #{lostHeartbeatNum}, #{processCapacity,jdbcType=INTEGER},#{nodeState,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wk.entity.fcaps.AmCollectorHostInfo" >
    insert into am_collector_host_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="collectorId != null" >
        collector_id,
      </if>
      <if test="collectorName != null" >
        collector_name,
      </if>
      <if test="collectorInnerIp != null" >
        collector_inner_ip,
      </if>
      <if test="collectorExternalIp != null" >
        collector_external_ip,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="heartBeatTime != null" >
        heartbeat_time,
      </if>
      <if test="lostHeartbeatNum != null" >
        lost_heartbeat_num,
      </if>
      <if test="processCapacity != null" >
        process_capacity,
      </if>
      <if test="nodeState != null" >
        node_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="collectorId != null" >
        #{collectorId},
      </if>
      <if test="collectorName != null" >
        #{collectorName,jdbcType=VARCHAR},
      </if>
      <if test="collectorInnerIp != null" >
        #{collectorInnerIp,jdbcType=VARCHAR},
      </if>
      <if test="collectorExternalIp != null" >
        #{collectorExternalIp,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="heartBeatTime != null" >
        #{heartBeatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lostHeartbeatNum != null" >
        #{lostHeartbeatNum},
      </if>
      <if test="processCapacity != null" >
        #{processCapacity,jdbcType=INTEGER},
      </if>
      <if test="nodeState != null" >
        #{nodeState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="getStateIds" parameterType="map" resultType="java.lang.Integer">
    select collector_id from am_collector_host_info where node_state=#{state,jdbcType=VARCHAR}
  </select>

  <select id="countByExample" parameterType="com.wk.entity.fcaps.AmCollectorHostInfoExample" resultType="java.lang.Integer" >
    select count(*) from am_collector_host_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update am_collector_host_info
    <set >
      <if test="record.collectorId != null" >
        collector_id = #{record.collectorId},
      </if>
      <if test="record.collectorName != null" >
        collector_name = #{record.collectorName,jdbcType=VARCHAR},
      </if>
      <if test="record.collectorInnerIp != null" >
        collector_inner_ip = #{record.collectorInnerIp,jdbcType=VARCHAR},
      </if>
      <if test="record.collectorExternalIp != null" >
        collector_external_ip = #{record.collectorExternalIp,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.heartBeatTime != null" >
        heartbeat_time = #{record.heartBeatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lostHeartbeatNum != null" >
        lost_heartbeat_num = #{record.lostHeartbeatNum},
      </if>
      <if test="record.processCapacity != null" >
        process_capacity = #{record.processCapacity,jdbcType=INTEGER},
      </if>
      <if test="record.nodeState != null" >
        node_state = #{record.nodeState,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update am_collector_host_info
    set collector_id = #{record.collectorId},
      collector_name = #{record.collectorName,jdbcType=VARCHAR},
      collector_inner_ip = #{record.collectorInnerIp,jdbcType=VARCHAR},
      collector_external_ip = #{record.collectorExternalIp,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      heartbeat_time = #{record.heartBeatTime,jdbcType=TIMESTAMP},
      lost_heartbeat_num = #{record.lostHeartbeatNum},
      process_capacity = #{record.processCapacity,jdbcType=INTEGER},
      node_state = #{record.nodeState,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wk.entity.fcaps.AmCollectorHostInfo" flushCache="true">
    update am_collector_host_info
    <set >
      <if test="collectorName != null" >
        collector_name = #{collectorName,jdbcType=VARCHAR},
      </if>
      <if test="collectorInnerIp != null" >
        collector_inner_ip = #{collectorInnerIp,jdbcType=VARCHAR},
      </if>
      <if test="collectorExternalIp != null" >
        collector_external_ip = #{collectorExternalIp,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="heartBeatTime != null" >
        heartbeat_time = #{heartBeatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lostHeartbeatNum != null" >
        lost_heartbeat_num = #{lostHeartbeatNum},
      </if>
      <if test="processCapacity != null" >
        process_capacity = #{processCapacity,jdbcType=INTEGER},
      </if>
      <if test="nodeState != null" >
        node_state = #{nodeState,jdbcType=VARCHAR},
      </if>
    </set>
    where collector_id = #{collectorId}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wk.entity.fcaps.AmCollectorHostInfo" flushCache="true">
    update am_collector_host_info
    set collector_name = #{collectorName,jdbcType=VARCHAR},
      collector_inner_ip = #{collectorInnerIp,jdbcType=VARCHAR},
      collector_external_ip = #{collectorExternalIp,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      heartbeat_time = #{heartBeatTime,jdbcType=TIMESTAMP},
      lost_heartbeat_num = #{lostHeartbeatNum},
      process_capacity = #{processCapacity,jdbcType=INTEGER},
      node_state = #{nodeState,jdbcType=VARCHAR}
    where collector_id = #{collectorId}
  </update>
</mapper>